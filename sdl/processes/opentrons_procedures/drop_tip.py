# generated by datamodel-codegen:
#   filename:  drop_tip.json
#   timestamp: 2024-07-17T19:04:20+00:00

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field

from sdl.processes.opentrons_procedures.home_robot import HomeRobot, HomeRobotParams
from sdl.processes.opentrons_procedures.move_to_well import MoveToWell, MoveToWellParams
from sdl.processes.opentrons_utils import WellLocation, OpentronsBaseProcedure, Offset, OpentronsParamsMoveToLocation
from sdl.processes.opentrons_utils1 import OpentronsMoveAction


class DropTipParams(OpentronsParamsMoveToLocation):
    wellLocation : Optional[WellLocation] = WellLocation(origin='top', offset=Offset(x=0, y=0, z=0))
    homeAfter: Optional[bool] = False



class DropTip(OpentronsMoveAction[DropTipParams]):
    url = '/runs/{run_id}/commands'
    commandType = 'dropTip'
    intent = None

    def execute(self, *args, **kwargs):
        output = self.execute_all(*args, **kwargs)
        if self.params.homeAfter:
            HomeRobot(HomeRobotParams()).execute(*args, **kwargs)
        return output

