services:
  mg-backend:
    env_file:
      - .env
    build:
      context: .
      dockerfile: docker/mg-backend.dockerfile
    container_name: 'mg-backend'
    volumes:
      - './:/app'
    ports:
      - "${BACKEND_PORT}:8080"
  mg-frontend:
    env_file:
      - .env
    build:
      context: .
      dockerfile: docker/mg-frontend.dockerfile
    container_name: 'mg-frontend'
    volumes:
      - './:/app'
    environment:
      - NEOMODEL_NEO4J_BOLT_URL=bolt://mg-neo4j:neo4jpassword@neo4j:7687
    depends_on:
      - mg-backend
      - mg-neo4j
    ports:
      - "${FRONTEND_PORT}:8000"
  mg-neo4j:
    image: neo4j:5.11
    container_name: mg_neo4j
    environment:
      - NEO4J_AUTH=neo4j/neo4jpassword
    ports:
      - 7474:7474
      - 7687:7687
    volumes:
      - "./neo4j_data/:/data"
  mg-postgres:
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    container_name: 'mg-postgres'
    image: postgres:16
    ports:
      - 5432:5432
    volumes:
      - './postgres_data/:/var/lib/postgresql/data'
