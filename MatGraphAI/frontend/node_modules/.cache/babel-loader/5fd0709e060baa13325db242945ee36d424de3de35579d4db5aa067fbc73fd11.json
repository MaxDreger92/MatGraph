{"ast":null,"code":"var _jsxFileName = \"/home/mdreger/Documents/MatGraphAI/MatGraphAI/frontend/src/components/authentication.component.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useMutation, useQueryClient } from \"react-query\";\nimport { userContext } from \"../common/userContext\";\nimport { useContext } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useToggle, upperFirst } from \"@mantine/hooks\";\nimport { useForm } from \"@mantine/form\";\nimport { TextInput, PasswordInput, Paper, Group, Button, Checkbox, Anchor, Stack } from \"@mantine/core\";\nimport logo from \"../img/logo.png\";\nimport client from \"../client\";\n\n// export interface AuthenticationFormValues {\n//     email: string,\n//     name: string,\n//     password: string,\n//     terms: boolean,\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AuthenticationForm(props) {\n  _s();\n  const {\n    setTab\n  } = props;\n  const queryClient = useQueryClient();\n  const currentUser = useContext(userContext);\n  const navigate = useNavigate();\n  const [message, setMessage] = useState(\"\");\n  useEffect(() => {\n    if (currentUser) {\n      navigate(\"/\"); //manually navigate home if user is already logged in\n    }\n  });\n\n  const loginMutation = useMutation(\"login\", login, {\n    onSuccess: () => {\n      queryClient.prefetchQuery('getCurrentUser', client.getCurrentUser);\n      toast.success(\"User logged in successfully!\");\n      setTab(\"\");\n      navigate(\"/\");\n    },\n    onError: () => {\n      toast.error(\"User could not be logged in!\");\n    }\n  });\n  const registerMutation = useMutation(register, {\n    onSuccess: () => {\n      toast.success(\"User created successfully!\");\n      toggle();\n    },\n    onError: () => {\n      toast.error(\"User could not be created.\");\n    }\n  });\n  const [type, toggle] = useToggle([\"login\", \"register\"]);\n  const form = useForm({\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      terms: true\n    },\n    validate: {\n      email: val => /^\\S+@\\S+$/.test(val) ? null : \"Invalid email\",\n      password: val => val.length < 6 ? \"Password should include at least 6 characters\" : null\n    }\n  });\n  const handleSubmit = formValues => {\n    if (type === \"login\") {\n      loginMutation.mutate(formValues);\n      return;\n    }\n    if (formValues.terms) {\n      registerMutation.mutate(formValues);\n      return;\n    }\n    //Throw Error\n  };\n\n  async function login(credentials) {\n    try {\n      const {\n        email,\n        password\n      } = credentials;\n      const response = await client.login(email, password);\n      const token = response.data.token;\n      if (token) {\n        document.cookie = `token=${token}`;\n      }\n      return;\n    } catch (err) {\n      setMessage(err.response && err.response.data && err.response.data.message || err.message || err.toString());\n      throw new Error(\"Login failed\");\n    }\n  }\n  async function register(credentials) {\n    try {\n      const {\n        name,\n        email,\n        password\n      } = credentials;\n      const response = await client.register(name, email, password);\n      return response.data;\n      // setMessage(response.data.message);\n    } catch (err) {\n      // setMessage(\n      //   (err.response &&\n      //     err.response.data &&\n      //     err.response.data.message) ||\n      //     err.message ||\n      //     err.toString()\n      // );\n      throw new Error(\"Registration failed\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrap-login\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      radius: \"md\",\n      p: \"xl\",\n      withBorder: true,\n      ...props,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"matGraphAI Logo\",\n        className: \"login-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: form.onSubmit(handleSubmit),\n        children: [/*#__PURE__*/_jsxDEV(Stack, {\n          children: [type === \"register\" && /*#__PURE__*/_jsxDEV(TextInput, {\n            label: \"Name\",\n            placeholder: \"Your name\",\n            value: form.values.name,\n            onChange: event => form.setFieldValue(\"name\", event.currentTarget.value),\n            radius: \"md\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n            required: true,\n            label: \"Email\",\n            placeholder: \"hello@matGraph.AI\",\n            value: form.values.email,\n            onChange: event => form.setFieldValue(\"email\", event.currentTarget.value),\n            error: form.errors.email && \"Invalid email\",\n            radius: \"md\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PasswordInput, {\n            required: true,\n            label: \"Password\",\n            placeholder: \"Your password\",\n            value: form.values.password,\n            onChange: event => form.setFieldValue(\"password\", event.currentTarget.value),\n            error: form.errors.password && \"Password should include at least 6 characters\",\n            radius: \"md\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), type === \"register\" && /*#__PURE__*/_jsxDEV(Checkbox, {\n            label: \"I accept terms and conditions\",\n            checked: form.values.terms,\n            onChange: event => form.setFieldValue(\"terms\", event.currentTarget.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Group, {\n          position: \"apart\",\n          mt: \"xl\",\n          children: [/*#__PURE__*/_jsxDEV(Anchor, {\n            component: \"button\",\n            type: \"button\",\n            color: \"dimmed\",\n            onClick: () => toggle(),\n            size: \"xs\",\n            children: type === \"register\" ? \"Already have an account? Login\" : \"Don't have an account? Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            radius: \"xl\",\n            children: upperFirst(type)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthenticationForm, \"Audc8zFKVvlHrqBQHvj50YtYN+w=\", false, function () {\n  return [useQueryClient, useNavigate, useMutation, useMutation, useToggle, useForm];\n});\n_c = AuthenticationForm;\nvar _c;\n$RefreshReg$(_c, \"AuthenticationForm\");","map":{"version":3,"names":["useEffect","useState","useMutation","useQueryClient","userContext","useContext","toast","useNavigate","useToggle","upperFirst","useForm","TextInput","PasswordInput","Paper","Group","Button","Checkbox","Anchor","Stack","logo","client","jsxDEV","_jsxDEV","AuthenticationForm","props","_s","setTab","queryClient","currentUser","navigate","message","setMessage","loginMutation","login","onSuccess","prefetchQuery","getCurrentUser","success","onError","error","registerMutation","register","toggle","type","form","initialValues","name","email","password","terms","validate","val","test","length","handleSubmit","formValues","mutate","credentials","response","token","data","document","cookie","err","toString","Error","className","children","radius","p","withBorder","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","placeholder","value","values","onChange","event","setFieldValue","currentTarget","required","errors","checked","position","mt","component","color","onClick","size","_c","$RefreshReg$"],"sources":["/home/mdreger/Documents/MatGraphAI/MatGraphAI/frontend/src/components/authentication.component.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport { useMutation, useQueryClient } from \"react-query\"\nimport { userContext } from \"../common/userContext\"\nimport { useContext } from \"react\"\nimport { toast } from \"react-hot-toast\"\nimport { useNavigate } from \"react-router-dom\"\nimport { useToggle, upperFirst } from \"@mantine/hooks\"\nimport { useForm } from \"@mantine/form\"\nimport {\n  TextInput,\n  PasswordInput,\n  Text,\n  Paper,\n  Group,\n  PaperProps,\n  Button,\n  Checkbox,\n  Anchor,\n  Stack,\n} from \"@mantine/core\"\nimport logo from \"../img/logo.png\"\n\nimport IUser from \"../types/user.type\"\nimport client from \"../client\"\n\n// export interface AuthenticationFormValues {\n//     email: string,\n//     name: string,\n//     password: string,\n//     terms: boolean,\n// }\n\ninterface AuthenticationFormProps {\n  setTab: (tab: string) => void\n}\n\nexport default function AuthenticationForm(props: AuthenticationFormProps) {\n  const { setTab } = props\n  const queryClient = useQueryClient()\n  const currentUser = useContext(userContext)\n  const navigate = useNavigate()\n  const [message, setMessage] = useState(\"\")\n\n  useEffect(() => {\n    if (currentUser) {\n      navigate(\"/\") //manually navigate home if user is already logged in\n    }\n  })\n\n  const loginMutation = useMutation(\"login\", login, {\n    onSuccess: () => {\n      queryClient.prefetchQuery<IUser | null | undefined>('getCurrentUser', client.getCurrentUser)\n      toast.success(\"User logged in successfully!\")\n      setTab(\"\")\n      navigate(\"/\")\n    },\n    onError: () => {\n      toast.error(\"User could not be logged in!\")\n    },\n  })\n\n  const registerMutation = useMutation(register, {\n    onSuccess: () => {\n      toast.success(\"User created successfully!\")\n      toggle()\n    },\n    onError: () => {\n      toast.error(\"User could not be created.\")\n    },\n  })\n\n  const [type, toggle] = useToggle([\"login\", \"register\"])\n\n  const form = useForm({\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      terms: true,\n    },\n\n    validate: {\n      email: (val) => (/^\\S+@\\S+$/.test(val) ? null : \"Invalid email\"),\n      password: (val) =>\n        val.length < 6\n          ? \"Password should include at least 6 characters\"\n          : null,\n    },\n  })\n\n  type FormValues = typeof form.values\n\n  const handleSubmit = (formValues: FormValues) => {\n    if (type === \"login\") {\n      loginMutation.mutate(formValues)\n      return\n    }\n    if (formValues.terms) {\n      registerMutation.mutate(formValues)\n      return\n    }\n    //Throw Error\n  }\n\n  async function login(credentials: FormValues) {\n    try {\n      const { email, password } = credentials\n      const response = await client.login(email, password)\n      const token = response.data.token\n\n      if (token) {\n        document.cookie = `token=${token}`\n      }\n      return\n    } catch (err: any) {\n      setMessage(\n        (err.response && err.response.data && err.response.data.message) ||\n          err.message ||\n          err.toString()\n      )\n      throw new Error(\"Login failed\")\n    }\n  }\n\n  async function register(credentials: FormValues) {\n    try {\n      const { name, email, password } = credentials\n      const response = await client.register(name, email, password)\n      return response.data\n      // setMessage(response.data.message);\n    } catch (err: any) {\n      // setMessage(\n      //   (err.response &&\n      //     err.response.data &&\n      //     err.response.data.message) ||\n      //     err.message ||\n      //     err.toString()\n      // );\n      throw new Error(\"Registration failed\")\n    }\n  }\n\n  return (\n    <div className=\"wrap-login\">\n      <Paper radius=\"md\" p=\"xl\" withBorder {...props}>\n        <img src={logo} alt=\"matGraphAI Logo\" className=\"login-logo\" />\n        {/* <Text size=\"lg\" weight={500}>\n          Welcome to matGraphAI, {type} with\n        </Text> */}\n\n        <form onSubmit={form.onSubmit(handleSubmit)}>\n          <Stack>\n            {type === \"register\" && (\n              <TextInput\n                label=\"Name\"\n                placeholder=\"Your name\"\n                value={form.values.name}\n                onChange={(event) =>\n                  form.setFieldValue(\"name\", event.currentTarget.value)\n                }\n                radius=\"md\"\n              />\n            )}\n\n            <TextInput\n              required\n              label=\"Email\"\n              placeholder=\"hello@matGraph.AI\"\n              value={form.values.email}\n              onChange={(event) =>\n                form.setFieldValue(\"email\", event.currentTarget.value)\n              }\n              error={form.errors.email && \"Invalid email\"}\n              radius=\"md\"\n            />\n\n            <PasswordInput\n              required\n              label=\"Password\"\n              placeholder=\"Your password\"\n              value={form.values.password}\n              onChange={(event) =>\n                form.setFieldValue(\"password\", event.currentTarget.value)\n              }\n              error={\n                form.errors.password &&\n                \"Password should include at least 6 characters\"\n              }\n              radius=\"md\"\n            />\n\n            {type === \"register\" && (\n              <Checkbox\n                label=\"I accept terms and conditions\"\n                checked={form.values.terms}\n                onChange={(event) =>\n                  form.setFieldValue(\"terms\", event.currentTarget.checked)\n                }\n              />\n            )}\n          </Stack>\n\n          <Group position=\"apart\" mt=\"xl\">\n            <Anchor\n              component=\"button\"\n              type=\"button\"\n              color=\"dimmed\"\n              onClick={() => toggle()}\n              size=\"xs\"\n            >\n              {type === \"register\"\n                ? \"Already have an account? Login\"\n                : \"Don't have an account? Register\"}\n            </Anchor>\n            <Button type=\"submit\" radius=\"xl\">\n              {upperFirst(type)}\n            </Button>\n          </Group>\n        </form>\n      </Paper>\n    </div>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}