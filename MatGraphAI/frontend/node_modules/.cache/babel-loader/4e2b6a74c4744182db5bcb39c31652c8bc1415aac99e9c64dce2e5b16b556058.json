{"ast":null,"code":"var _jsxFileName = \"/home/mdreger/Documents/MatGraphAI/MatGraphAI/frontend/src/components/account.component.tsx\",\n  _s = $RefreshSig$();\nimport { useContext } from \"react\";\nimport { useMutation } from \"react-query\";\nimport client from \"../client\";\nimport { userContext } from \"../common/userContext\";\nimport { toast } from \"react-hot-toast\";\nimport { useForm } from \"@mantine/form\";\nimport { Paper, TextInput, Button } from \"@mantine/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Account(props) {\n  _s();\n  const currentUser = useContext(userContext);\n  const nameMutation = useMutation(\"updateName\", updateName, {\n    onSuccess: () => {\n      toast.success(\"Update name successful.\");\n    },\n    onError: () => {\n      toast.error(\"Name could not be updated.\");\n    }\n  });\n  const mailMutation = useMutation(\"updateMail\", updateMail, {\n    onSuccess: () => {\n      toast.success(\"Update email successful.\");\n    },\n    onError: () => {\n      toast.error(\"Email could not be updated.\");\n    }\n  });\n  const passwordMutation = useMutation(\"updatePassword\", updatePassword, {\n    onSuccess: () => {\n      toast.success(\"Update password succesful.\");\n    },\n    onError: () => {\n      toast.error(\"Password could not be updated.\");\n    }\n  });\n  const nameForm = useForm({\n    initialValues: {\n      name: \"\"\n    }\n  });\n  const mailForm = useForm({\n    initialValues: {\n      email: \"\"\n    }\n  });\n  const passwordForm = useForm({\n    initialValues: {\n      oldPass: \"\",\n      newPass: \"\",\n      confirmNewPass: \"\"\n    },\n    validate: {\n      confirmNewPass: (value, values) => value !== values.newPass ? \"Passwords do not match.\" : null\n    }\n  });\n  const handleNameSubmit = formValues => {\n    nameMutation.mutate(formValues);\n  };\n  const handleMailSubmit = formValues => {\n    mailMutation.mutate(formValues);\n  };\n  const handlePasswordSubmit = formValues => {\n    passwordMutation.mutate(formValues);\n  };\n  async function updateName(credentials) {\n    try {\n      const {\n        name\n      } = credentials;\n      const response = await client.updateName(name);\n      return;\n    } catch (err) {}\n  }\n  async function updateMail(credentials) {\n    try {\n      const {\n        email\n      } = credentials;\n      const response = await client.updateMail(email);\n    } catch (err) {}\n  }\n  async function updatePassword(credentials) {\n    try {\n      const {\n        oldPass,\n        newPass\n      } = credentials;\n      const response = await client.updatePassword(newPass, oldPass);\n    } catch (err) {}\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrap-account\",\n    children: currentUser && /*#__PURE__*/_jsxDEV(Paper, {\n      radius: \"md\",\n      p: \"xl\",\n      withBorder: true,\n      ...props,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: nameForm.onSubmit(handleNameSubmit),\n        children: [/*#__PURE__*/_jsxDEV(TextInput, {\n          label: \"Name\",\n          placeholder: currentUser.name,\n          value: nameForm.values.name,\n          onChange: event => nameForm.setFieldValue(\"name\", event.currentTarget.value),\n          radius: \"md\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          radius: \"xl\",\n          children: \"Update name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: mailForm.onSubmit(handleMailSubmit),\n        children: [/*#__PURE__*/_jsxDEV(TextInput, {\n          label: \"Email\"\n          // placeholder={currentUser.email}\n          ,\n          value: currentUser.email,\n          onChange: event => nameForm.setFieldValue(\"email\", event.currentTarget.value),\n          radius: \"md\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          radius: \"xl\",\n          children: \"Update email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: passwordForm.onSubmit(handlePasswordSubmit)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this)\n\n  // <div className=\"container\">\n  //   {currentUser && (\n  //     <div>\n  //       {/* <header className=\"jumbotron\"> */}\n  //         <h3>\n  //           {currentUser.name && (\n  //             <strong>{currentUser.name}</strong>\n  //           )}\n  //            <strong>'s Account</strong>\n  //         </h3>\n  //       {/* </header> */}\n  //       <p>\n  //         <strong>Id:</strong> {currentUser.id}\n  //       </p>\n  //       <p>\n  //         <strong>Email:</strong> {currentUser.email}\n  //       </p>\n  //       <strong>Authorities:</strong>\n  //       <ul>\n  //         {currentUser.roles &&\n  //           currentUser.roles.map((role, index) => (\n  //             <li key={index}>{role}</li>\n  //           ))}\n  //       </ul>\n  //     </div>\n  //   )}\n  // </div>\n  ;\n}\n_s(Account, \"Iy46BkyuMRWvLF8v08TrTkIpQw8=\", false, function () {\n  return [useMutation, useMutation, useMutation, useForm, useForm, useForm];\n});\n_c = Account;\nvar _c;\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"names":["useContext","useMutation","client","userContext","toast","useForm","Paper","TextInput","Button","jsxDEV","_jsxDEV","Account","props","_s","currentUser","nameMutation","updateName","onSuccess","success","onError","error","mailMutation","updateMail","passwordMutation","updatePassword","nameForm","initialValues","name","mailForm","email","passwordForm","oldPass","newPass","confirmNewPass","validate","value","values","handleNameSubmit","formValues","mutate","handleMailSubmit","handlePasswordSubmit","credentials","response","err","className","children","radius","p","withBorder","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","placeholder","onChange","event","setFieldValue","currentTarget","type","_c","$RefreshReg$"],"sources":["/home/mdreger/Documents/MatGraphAI/MatGraphAI/frontend/src/components/account.component.tsx"],"sourcesContent":["import { useEffect, useContext } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport { useMutation, useQuery } from \"react-query\"\nimport IUser from \"../types/user.type\"\nimport client from \"../client\"\nimport { userContext } from \"../common/userContext\"\nimport { toast } from \"react-hot-toast\"\nimport { useForm } from \"@mantine/form\"\nimport {\n  Paper,\n  PaperProps,\n  TextInput,\n  Button\n} from \"@mantine/core\"\n\nexport default function Account(props: PaperProps) {\n  const currentUser = useContext(userContext)\n\n  const nameMutation = useMutation(\"updateName\", updateName, {\n    onSuccess: () => {\n      toast.success(\"Update name successful.\")\n    },\n    onError: () => {\n      toast.error(\"Name could not be updated.\")\n    }\n  })\n\n  const mailMutation = useMutation(\"updateMail\", updateMail, {\n    onSuccess: () => {\n      toast.success(\"Update email successful.\")\n    },\n    onError: () => {\n      toast.error(\"Email could not be updated.\")\n    }\n  })\n\n  const passwordMutation = useMutation(\"updatePassword\", updatePassword, {\n    onSuccess: () => {\n      toast.success(\"Update password succesful.\")\n    },\n    onError: () => {\n      toast.error(\"Password could not be updated.\")\n    }\n  })\n\n  const nameForm = useForm({\n    initialValues: {\n      name: \"\"\n    },\n  })\n\n  const mailForm = useForm({\n    initialValues: {\n      email: \"\"\n    },\n  })\n\n  const passwordForm = useForm({\n    initialValues: {\n      oldPass: \"\",\n      newPass: \"\",\n      confirmNewPass: \"\"\n    },\n\n    validate: {\n      confirmNewPass: (value, values) => \n        value !== values.newPass ? \"Passwords do not match.\" : null,\n    }\n  })\n\n  type NameFormValues = typeof nameForm.values\n  type MailFormValues = typeof mailForm.values\n  type PasswordFormValues = typeof passwordForm.values\n\n  const handleNameSubmit = (formValues: NameFormValues) => {\n    nameMutation.mutate(formValues)\n  }\n\n  const handleMailSubmit = (formValues: MailFormValues) => {\n    mailMutation.mutate(formValues)\n  }\n\n  const handlePasswordSubmit = (formValues: PasswordFormValues) => {\n    passwordMutation.mutate(formValues)\n  }\n\n  async function updateName(credentials: NameFormValues) {\n    try {\n      const { name } = credentials\n      const response = await client.updateName(name)\n      return\n    } catch (err:any) {\n\n    }\n  }\n\n  async function updateMail(credentials: MailFormValues) {\n    try {\n      const { email } = credentials\n      const response = await client.updateMail(email)\n    } catch (err: any) {\n\n    }\n  }\n\n  async function updatePassword(credentials: PasswordFormValues) {\n    try {\n      const { oldPass, newPass} = credentials\n      const response = await client.updatePassword(newPass, oldPass)\n    } catch (err: any) {\n\n    }\n  }\n\n  return (\n\n    <div className=\"wrap-account\">\n      {currentUser && (\n        <Paper radius=\"md\" p=\"xl\" withBorder {...props}>\n        <h3>Account</h3>\n        <form onSubmit={nameForm.onSubmit(handleNameSubmit)}>\n          <TextInput\n            label=\"Name\"\n            placeholder={currentUser.name}\n            value={nameForm.values.name}\n            onChange={(event) =>\n              nameForm.setFieldValue(\"name\", event.currentTarget.value)\n            }\n            radius=\"md\"\n          />\n          <Button type=\"submit\" radius=\"xl\">\n            Update name\n          </Button>\n        </form>\n        <form onSubmit={mailForm.onSubmit(handleMailSubmit)}>\n          <TextInput\n            label=\"Email\"\n            // placeholder={currentUser.email}\n            value={currentUser.email}\n            onChange={(event) =>\n              nameForm.setFieldValue(\"email\", event.currentTarget.value)\n            }\n            radius=\"md\"\n          />\n          <Button type=\"submit\" radius=\"xl\">\n            Update email\n          </Button>\n        </form>\n        <form onSubmit={passwordForm.onSubmit(handlePasswordSubmit)}>\n\n        </form>\n      </Paper>\n      )}\n    </div>\n\n\n    // <div className=\"container\">\n    //   {currentUser && (\n    //     <div>\n    //       {/* <header className=\"jumbotron\"> */}\n    //         <h3>\n    //           {currentUser.name && (\n    //             <strong>{currentUser.name}</strong>\n    //           )}\n    //            <strong>'s Account</strong>\n    //         </h3>\n    //       {/* </header> */}\n    //       <p>\n    //         <strong>Id:</strong> {currentUser.id}\n    //       </p>\n    //       <p>\n    //         <strong>Email:</strong> {currentUser.email}\n    //       </p>\n    //       <strong>Authorities:</strong>\n    //       <ul>\n    //         {currentUser.roles &&\n    //           currentUser.roles.map((role, index) => (\n    //             <li key={index}>{role}</li>\n    //           ))}\n    //       </ul>\n    //     </div>\n    //   )}\n    // </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}