{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:8080/api\";\nfunction getCookie(name) {\n  var _document$cookie$spli;\n  const cookieValue = (_document$cookie$spli = document.cookie.split(\"; \").find(cookie => cookie.startsWith(name))) === null || _document$cookie$spli === void 0 ? void 0 : _document$cookie$spli.split(\"=\")[1];\n  return cookieValue;\n}\nclass Client {\n  constructor() {\n    this.client = void 0;\n    this.client = axios.create({\n      baseURL: API_URL\n    });\n    this.getCurrentUser = this.getCurrentUser.bind(this);\n  }\n  async test() {\n    try {\n      const response = await this.client.get(\"/test\");\n      return response.data;\n    } catch (err) {\n      throw new Error(err.message);\n    }\n  }\n  async login(email, password) {\n    try {\n      const response = await this.client.post(\"/users/login\", {\n        email,\n        password\n      }); // token json\n      // const token = response.data.token; // Cookie saved in login component\n\n      // if (token) {\n      //   document.cookie = `token=${token}`\n      // }\n      return response;\n    } catch (err) {\n      throw new Error(err.message);\n    }\n  }\n  async register(name, email, password) {\n    try {\n      const response = await this.client.post(\"/users/register\", {\n        name,\n        email,\n        password\n      }); // message json\n      return response.data;\n    } catch (err) {\n      throw new Error(err.message);\n    }\n  }\n  async getCurrentUser() {\n    try {\n      const token = getCookie(\"token\");\n      if (!token) {\n        return null;\n      }\n      const response = await this.client.get(\"/users/current\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }); // user json\n\n      return response.data;\n    } catch (err) {\n      if (err.response && err.response.status === 404) {\n        return null;\n      } else {\n        throw new Error(\"Error: \", err);\n      }\n    }\n  }\n  async updateName(name) {\n    try {\n      const token = getCookie(\"token\");\n      if (!token) {\n        return;\n      }\n      const response = await this.client.patch(\"/users/update/name\", {\n        name,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (err) {\n      throw new Error('Error: ', err);\n    }\n  }\n  async updateMail(newMail) {\n    try {\n      const token = getCookie(\"token\");\n      if (!token) {\n        return;\n      }\n      const response = await this.client.patch(\"/users/update/email\", {\n        newMail,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (err) {\n      throw new Error('Error: ', err);\n    }\n  }\n  async updatePassword(newPass, oldPass) {\n    try {\n      const token = getCookie(\"token\");\n      if (!token) {\n        return;\n      }\n      const response = await this.client.patch(\"/users/update/password\", {\n        newPass,\n        oldPass,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (err) {\n      throw new Error('Error: ', err);\n    }\n  }\n}\nconst client = new Client();\nexport default client;","map":{"version":3,"names":["axios","API_URL","getCookie","name","_document$cookie$spli","cookieValue","document","cookie","split","find","startsWith","Client","constructor","client","create","baseURL","getCurrentUser","bind","test","response","get","data","err","Error","message","login","email","password","post","register","token","headers","Authorization","status","updateName","patch","updateMail","newMail","updatePassword","newPass","oldPass"],"sources":["/home/mdreger/Documents/MatGraphAI/MatGraphAI/frontend/src/client.ts"],"sourcesContent":["import axios, { AxiosInstance } from \"axios\"\n\nconst API_URL = \"http://localhost:8080/api\"\n\nfunction getCookie(name: string) {\n  const cookieValue = document.cookie\n    .split(\"; \")\n    .find((cookie) => cookie.startsWith(name))\n    ?.split(\"=\")[1]\n\n  return cookieValue\n}\n\nclass Client {\n  private client: AxiosInstance\n\n  constructor() {\n    this.client = axios.create({\n      baseURL: API_URL,\n    })\n\n    this.getCurrentUser = this.getCurrentUser.bind(this)\n  }\n\n  async test() {\n    try {\n      const response = await this.client.get(\"/test\")\n      return response.data\n    } catch (err: any) {\n      throw new Error(err.message)\n    }\n  }\n\n  async login(email: string, password: string) {\n    try {\n      const response = await this.client.post(\"/users/login\", {\n        email,\n        password,\n      }) // token json\n      // const token = response.data.token; // Cookie saved in login component\n\n      // if (token) {\n      //   document.cookie = `token=${token}`\n      // }\n      return response\n    } catch (err: any) {\n      throw new Error(err.message)\n    }\n  }\n\n  async register(name: string, email: string, password: string) {\n    try {\n      const response = await this.client.post(\"/users/register\", {\n        name,\n        email,\n        password,\n      }) // message json\n      return response.data\n    } catch (err: any) {\n      throw new Error(err.message)\n    }\n  }\n\n  async getCurrentUser() {\n    try {\n      const token = getCookie(\"token\")\n      if (!token) {\n        return null\n      }\n\n      const response = await this.client.get(\"/users/current\", {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      }) // user json\n\n      return response.data\n    } catch (err: any) {\n      if (err.response && err.response.status === 404) {\n        return null\n      } else {\n        throw new Error(\"Error: \", err)\n      }\n    }\n  }\n\n  async updateName(name: string) {\n    try {\n      const token = getCookie(\"token\")\n      if (!token) {\n        return\n      }\n\n      const response = await this.client.patch(\"/users/update/name\", {\n        name,\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n\n      return response.data\n    } catch (err: any) {\n      throw new Error('Error: ', err)\n    }\n  }\n\n  async updateMail(newMail: string) {\n    try {\n      const token = getCookie(\"token\")\n      if (!token) {\n        return\n      }\n\n      const response = await this.client.patch(\"/users/update/email\", {\n        newMail,\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n\n      return response.data\n    } catch (err: any) {\n      throw new Error('Error: ', err)\n    }\n  }\n\n  async updatePassword(newPass: string, oldPass: string) {\n    try {\n      const token = getCookie(\"token\")\n      if (!token) {\n        return\n      }\n\n      const response = await this.client.patch(\"/users/update/password\", {\n        newPass,\n        oldPass,\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n\n      return response.data\n    } catch (err: any) {\n      throw new Error('Error: ', err)\n    }\n  }\n}\n\nconst client = new Client()\n\nexport default client\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}