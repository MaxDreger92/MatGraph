{"ast":null,"code":"var _jsxFileName = \"/home/mdreger/Documents/MatGraphAI/MatGraphAI/frontend/src/components/canvas/ctxt/node-ctxt.component.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Planet } from \"react-planet\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n// import SwapHorizIcon from \"@mui/icons-material/SwapHoriz\"\n// import SyncAltIcon from \"@mui/icons-material/SyncAlt\"\n// import StraightIcon from \"@mui/icons-material/Straight\"\nimport { hoverColors } from \"../types/colorPalette\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ContextButton(props) {\n  _s();\n  const {\n    onSelect,\n    children,\n    action,\n    isSmall,\n    isPlanet,\n    planetOpen\n  } = props;\n  const [hovered, setHovered] = useState(false);\n  const handleClick = e => {\n    if (isPlanet) return;\n    e.stopPropagation();\n    onSelect(action);\n  };\n  const hoverColor = hoverColors[action] || hoverColors.default;\n  const styledChild = React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? /*#__PURE__*/React.cloneElement(child, {\n    style: {\n      color: hovered || planetOpen ? hoverColor : \"#1a1b1e\"\n    }\n  }) : child);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ctxt-button\",\n    onClick: handleClick,\n    onMouseEnter: () => setHovered(true),\n    onMouseLeave: () => setHovered(false),\n    style: {\n      width: isSmall ? 40 : 50,\n      height: isSmall ? 40 : 50,\n      backgroundColor: \"#666666\"\n    },\n    children: styledChild\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(ContextButton, \"V8YbV+gTZxGliGj1g0fftBlvsq4=\");\n_c = ContextButton;\nexport default function NodeContext(props) {\n  _s2();\n  const {\n    onSelect,\n    isOpen,\n    nodeSize\n  } = props;\n  const [layerPlanetOpen, setLayerPlanetOpen] = useState(false);\n  const planetClickLocal = e => {\n    e.stopPropagation();\n    setLayerPlanetOpen(!layerPlanetOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(Planet, {\n    centerContent: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ctxt-planet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 22\n    }, this),\n    open: isOpen\n    // autoClose\n    ,\n    hideOrbit: true,\n    orbitRadius: nodeSize / 2 + 40,\n    rotation: 90,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContextButton, {\n      onSelect: onSelect,\n      children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 19\n      }, this),\n      action: \"delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s2(NodeContext, \"UKb4aXg6gkfNnueGE3+LB2rGTgw=\");\n_c2 = NodeContext;\nvar _c, _c2;\n$RefreshReg$(_c, \"ContextButton\");\n$RefreshReg$(_c2, \"NodeContext\");","map":{"version":3,"names":["React","useState","Planet","CloseIcon","hoverColors","jsxDEV","_jsxDEV","ContextButton","props","_s","onSelect","children","action","isSmall","isPlanet","planetOpen","hovered","setHovered","handleClick","e","stopPropagation","hoverColor","default","styledChild","Children","map","child","isValidElement","cloneElement","style","color","className","onClick","onMouseEnter","onMouseLeave","width","height","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","NodeContext","_s2","isOpen","nodeSize","layerPlanetOpen","setLayerPlanetOpen","planetClickLocal","centerContent","open","hideOrbit","orbitRadius","rotation","_c2","$RefreshReg$"],"sources":["/home/mdreger/Documents/MatGraphAI/MatGraphAI/frontend/src/components/canvas/ctxt/node-ctxt.component.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { Planet } from \"react-planet\"\n\nimport CloseIcon from \"@mui/icons-material/Close\"\n// import SwapHorizIcon from \"@mui/icons-material/SwapHoriz\"\n// import SyncAltIcon from \"@mui/icons-material/SyncAlt\"\n// import StraightIcon from \"@mui/icons-material/Straight\"\nimport LayersIcon from \"@mui/icons-material/Layers\"\nimport AddIcon from '@mui/icons-material/Add'\nimport RemoveIcon from '@mui/icons-material/Remove';\n\nimport { hoverColors } from \"../types/colorPalette\"\n\ninterface NodeContextProps {\n  onSelect: (action: string) => void\n  isOpen: boolean\n  nodeSize: number\n}\n\ninterface ContextButtonProps {\n  onSelect: (action: string) => void\n  children: React.ReactNode\n  action: string\n  isSmall?: boolean\n  isPlanet?: boolean\n  planetOpen?: boolean\n}\n\nfunction ContextButton(props: ContextButtonProps) {\n  const { onSelect, children, action, isSmall, isPlanet, planetOpen } = props\n  const [hovered, setHovered] = useState(false)\n\n  const handleClick = (e: React.MouseEvent) => {\n    if (isPlanet) return\n    e.stopPropagation()\n    onSelect(action)\n  }\n\n  const hoverColor = hoverColors[action] || hoverColors.default\n\n  const styledChild = React.Children.map(children, (child) =>\n  React.isValidElement(child)\n    ? React.cloneElement(child as React.ReactElement<any>, {\n        style: { color: hovered || planetOpen ? hoverColor : \"#1a1b1e\" },\n      })\n    : child\n  )\n\n  return (\n    <div\n      className=\"ctxt-button\"\n      onClick={handleClick}\n      onMouseEnter={() => setHovered(true)}\n      onMouseLeave={() => setHovered(false)}\n      style={{\n        width: isSmall ? 40 : 50,\n        height: isSmall ? 40 : 50,\n        backgroundColor: \"#666666\",\n      }}\n    >\n      {styledChild}\n    </div>\n  )\n}\n\nexport default function NodeContext(props: NodeContextProps) {\n  const { onSelect, isOpen, nodeSize } = props\n  const [layerPlanetOpen, setLayerPlanetOpen] = useState(false)\n\n  const planetClickLocal = (e: React.MouseEvent) => {\n    e.stopPropagation()\n    setLayerPlanetOpen(!layerPlanetOpen)\n  }\n\n  return (\n    <Planet\n      centerContent={<div className=\"ctxt-planet\" />}\n      open={isOpen}\n      // autoClose\n      hideOrbit\n      orbitRadius={nodeSize / 2 + 40}\n      rotation={90}\n    >\n      {/* <div\n        style={{\n          transform: \"translate(-25px, -25px)\"\n        }}\n      >\n        <Planet\n          centerContent={\n            <NodeButton \n              onSelect={onSelect}\n              action=\"\"\n              children={<LayersIcon />}\n              isPlanet={true}\n              planetOpen={layerPlanetOpen}\n            />\n          }\n          open={layerPlanetOpen}\n          hideOrbit\n          orbitRadius={55}\n          rotation={0}\n          onClick={planetClickLocal}\n          \n        >\n          <div/>\n          <div/>\n          <NodeButton \n            onSelect={onSelect}\n            action=\"layerUp\"\n            children={<AddIcon />}\n            isSmall\n          />\n          <NodeButton \n            onSelect={onSelect}\n            action=\"layerDown\"\n            children={<RemoveIcon />}\n            isSmall\n          />\n          <div/>\n          <div/>\n        </Planet>\n      </div> */}\n      <div/>\n      <ContextButton\n        onSelect={onSelect}\n        children={<CloseIcon />}\n        action=\"delete\"\n      />\n    </Planet>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}