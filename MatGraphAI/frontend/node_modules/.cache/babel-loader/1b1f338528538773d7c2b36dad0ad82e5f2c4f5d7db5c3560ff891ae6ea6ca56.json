{"ast":null,"code":"var _jsxFileName = \"/home/mdreger/Documents/MatGraphAI/MatGraphAI/frontend/src/components/canvas/node.component.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\nimport chroma from \"chroma-js\";\nimport WarningIcon from \"@mui/icons-material/Warning\";\nimport NodeContext from \"./ctxt/node-ctxt.component\";\nimport { colorPalette } from \"./types/colorPalette\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _c2 = /*#__PURE__*/_s( /*#__PURE__*/React.memo(_c = _s(function Node(props) {\n  _s();\n  const {\n    node,\n    isSelected,\n    connecting,\n    colorIndex,\n    canvasRect,\n    handleNodeMove,\n    handleNodeAction\n  } = props;\n  const [nodeName, setNodeName] = useState(node.name);\n  const [dragging, setDragging] = useState(false);\n  const [dragStartPos, setDragStartPos] = useState(null);\n  const [dragCurrentPos, setDragCurrentPos] = useState(null);\n  const [dragOffset, setDragOffset] = useState(null);\n  const [nodeHovered, setNodeHovered] = useState(false);\n  const [connectorPos, setConnectorPos] = useState({\n    x: 0,\n    y: 0\n  });\n  const [connectorActive, setConnectorActive] = useState(false);\n  const [mouseDist, setMouseDist] = useState(0);\n  const [colors, setColors] = useState([]);\n  const nodeRef = useRef(null);\n\n  // scale node by mouse wheel\n  useEffect(() => {\n    const nodeCpy = nodeRef.current;\n    if (!nodeCpy) return;\n    const scaleNode = e => {\n      e.preventDefault();\n      const delta = Math.sign(e.deltaY);\n      handleNodeAction(node, \"scale\", delta);\n    };\n    nodeCpy.addEventListener(\"wheel\", scaleNode, {\n      passive: false\n    });\n    return () => {\n      nodeCpy.removeEventListener(\"wheel\", scaleNode);\n    };\n  }, [node, handleNodeAction]);\n  useEffect(() => {\n    const paletteColors = colorPalette[colorIndex];\n    setColors([paletteColors[node.type], chroma(paletteColors[node.type]).brighten().hex(), chroma(paletteColors[node.type]).darken(0.75).hex()]);\n  }, [node.type, colorIndex]);\n\n  // calculate connector stats (position, and active status)\n  // is called when mousePos is inside node bounding box\n  const calculateConnector = useCallback((dx, dy) => {\n    const angle = Math.atan2(dy, dx);\n    const radius = isSelected > 0 ? node.size / 2 + 5 : node.size / 2 + 2;\n    const connectorPosition = {\n      x: node.size / 2 + radius * Math.cos(angle),\n      y: node.size / 2 + radius * Math.sin(angle)\n    };\n    setConnectorPos(connectorPosition);\n    if (isSelected !== 0 && mouseDist > node.size / 2 - 1 && nodeHovered || isSelected === 0 && mouseDist > node.size / 2 - 5 && nodeHovered) {\n      setConnectorActive(true);\n    } else {\n      setConnectorActive(false);\n    }\n  }, [isSelected, nodeHovered, node.size, mouseDist]);\n\n  // handle node movement and check if mousePos is inside node\n  // bounding box. if it is, setMouseDist and call calculateConnector\n  useEffect(() => {\n    const handleMouseMove = e => {\n      if (!canvasRect) return;\n      if (dragging && dragCurrentPos && dragOffset) {\n        const displacement = {\n          x: e.clientX - dragCurrentPos.x - dragOffset.x - canvasRect.x,\n          y: e.clientY - dragCurrentPos.y - dragOffset.y - canvasRect.y\n        };\n        handleNodeMove(node.id, displacement);\n        setDragCurrentPos({\n          x: node.position.x + displacement.x,\n          y: node.position.y + displacement.y\n        });\n      } else if (canvasRect && !connecting) {\n        const mousePos = {\n          x: e.clientX - canvasRect.left,\n          y: e.clientY - canvasRect.top\n        };\n        const detectionRadius = 31;\n        if (mousePos.x >= node.position.x - (node.size / 2 + detectionRadius) && mousePos.x <= node.position.x + (node.size / 2 + detectionRadius) && mousePos.y >= node.position.y - (node.size / 2 + detectionRadius) && mousePos.y <= node.position.y + (node.size / 2 + detectionRadius)) {\n          const dx = mousePos.x - node.position.x;\n          const dy = mousePos.y - node.position.y;\n          const dist = Math.sqrt(dx * dx + dy * dy);\n          setMouseDist(dist);\n          calculateConnector(dx, dy);\n          return; // from here\n        }\n      }\n\n      setMouseDist(1000);\n      setConnectorActive(false);\n    };\n    // to here\n\n    document.addEventListener(\"mousemove\", handleMouseMove);\n    return () => {\n      document.removeEventListener(\"mousemove\", handleMouseMove);\n    };\n  }, [node, canvasRect, connecting, dragging, dragCurrentPos, dragOffset, handleNodeMove, calculateConnector]);\n  const handleNodeActionLocal = action => {\n    handleNodeAction(node, action);\n  };\n\n  // initiate node movement\n  const handleMouseDown = e => {\n    if (e.button === 2) return;\n    e.stopPropagation();\n    if (connectorActive && !node.isEditing) {\n      handleNodeAction(node, \"connect\");\n    } else {\n      if (!canvasRect || node.isEditing) return;\n      setDragging(true);\n      setDragStartPos({\n        x: node.position.x,\n        y: node.position.y\n      });\n      setDragCurrentPos({\n        x: node.position.x,\n        y: node.position.y\n      });\n      setDragOffset({\n        x: e.clientX - node.position.x - canvasRect.left,\n        y: e.clientY - node.position.y - canvasRect.top\n      });\n      handleNodeAction(node, \"initMove\");\n    }\n  };\n\n  // either complete connection between 2 nodes or\n  // open node nav menu (if node hasnt been moved significantly)\n  const handleMouseUp = () => {\n    if (connecting) {\n      // always carry out node click if a node is trying to connect (favour connection)\n      handleNodeAction(node, \"click\");\n    } else if (\n    // carry out node click if node is not trying to connect\n    // only when node has not been moved significantly (prevent click after drag)\n    dragStartPos && canvasRect && Math.abs(dragStartPos.x - node.position.x) < 15 && Math.abs(dragStartPos.y - node.position.y) < 15) {\n      handleNodeAction(node, \"click\");\n    }\n    cleanupDrag();\n  };\n\n  // prevent event propagation (prevent canvas.tsx onClick)\n  const handleClickLocal = e => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  // confirm node name\n  const handleNameInputBlur = () => {\n    handleNodeAction(node, \"rename\", undefined, nodeName);\n  };\n\n  // update local node name\n  const handleNameChangeLocal = e => {\n    console.log(\"changing\");\n    setNodeName(e.target.value);\n  };\n\n  // confirm node name with \"Enter\"\n  const handleInputKeyUp = e => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      handleNodeAction(node, \"rename\", undefined, nodeName);\n    }\n  };\n  const handleNameMouseUp = e => {\n    if (isSelected === 1 && dragStartPos && canvasRect && Math.abs(dragStartPos.x - node.position.x) < 15 && Math.abs(dragStartPos.y - node.position.y) < 15) {\n      e.stopPropagation();\n      handleNodeAction(node, \"setIsEditing\");\n      cleanupDrag();\n    }\n  };\n  const cleanupDrag = () => {\n    setDragging(false);\n    setDragStartPos(null);\n    setDragCurrentPos(null);\n    setDragOffset(null);\n  };\n  const iconAnimProps = useSpring({\n    color: nodeHovered ? '#E15554' : colors[0],\n    config: {\n      tension: nodeHovered ? 170 : 150,\n      friction: nodeHovered ? 26 : 170\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"absolute\",\n      zIndex: isSelected === 1 ? 1000 : node.layer\n    },\n    children: [isSelected === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      // Node context menu\n      style: {\n        position: \"relative\",\n        left: node.position.x,\n        top: node.position.y\n      },\n      children: /*#__PURE__*/_jsxDEV(NodeContext, {\n        onSelect: handleNodeActionLocal,\n        isOpen: isSelected === 1,\n        nodeSize: node.size\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      // clickable node (larger than actual node but not visual)\n      className: \"node-clickable\",\n      style: {\n        width: node.size + 20,\n        height: node.size + 20,\n        top: node.position.y,\n        left: node.position.x,\n        transform: \"translate(-50%, -50%)\"\n      },\n      onClick: handleClickLocal // prevent propagation to canvas onClick\\\n      ,\n      onContextMenu: handleClickLocal,\n      onMouseDown: handleMouseDown // init connection\n      ,\n      onMouseUp: handleMouseUp // handleNodeClick (complete connection || open node nav)\n      ,\n      onMouseEnter: () => setNodeHovered(true),\n      onMouseLeave: () => setNodeHovered(false),\n      tabIndex: 0,\n      ref: nodeRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        // visual node\n        className: \"node\",\n        tabIndex: 0,\n        style: {\n          width: node.size,\n          height: node.size,\n          backgroundColor: colors[0],\n          opacity: nodeName ? 1 : 0.7,\n          outlineColor: isSelected > 0 || nodeHovered ? colors[1] : colors[2],\n          outlineStyle: \"solid\",\n          outlineWidth: \"4px\",\n          outlineOffset: isSelected > 0 ? \"3px\" : \"0px\"\n        },\n        children: [node.isEditing ||\n        // node name input field\n        isSelected === 1 && !node.name ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          defaultValue: node.name,\n          onChange: handleNameChangeLocal // write nodeName state\n          ,\n          onBlur: handleNameInputBlur // rename actual node with node.name = nodeName\n          ,\n          onKeyUp: handleInputKeyUp // confirm name with enter\n          ,\n          autoFocus: true,\n          style: {\n            zIndex: node.layer + 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          // node name tag\n          onMouseUp: handleNameMouseUp,\n          style: {\n            userSelect: \"none\",\n            color: node.type === \"matter\" || node.type === \"measurement\" ? \"#1a1b1e\" : \"#ececec\",\n            zIndex: node.layer + 1\n          },\n          children: nodeName ? node.name : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this), mouseDist < node.size / 2 + 30 && mouseDist > 30 && !node.isEditing &&\n        /*#__PURE__*/\n        // draw node connector\n        _jsxDEV(\"div\", {\n          className: \"node-connector\",\n          style: {\n            border: `1px solid ${colors[1]}`,\n            backgroundColor: connectorActive ? colors[1] : \"transparent\",\n            top: connectorPos.y,\n            left: connectorPos.x,\n            pointerEvents: \"none\",\n            zIndex: node.layer + 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), !nodeName && !isSelected && !node.isEditing &&\n      /*#__PURE__*/\n      // warning: !nodeName\n      _jsxDEV(\"div\", {\n        className: \"node-warning\",\n        style: {\n          width: node.size,\n          height: node.size,\n          left: node.size / 2 + 10,\n          top: node.size / 2 + 10,\n          pointerEvents: \"none\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(animated.div, {\n          style: iconAnimProps,\n          children: /*#__PURE__*/_jsxDEV(WarningIcon, {\n            style: {\n              position: \"relative\",\n              fontSize: \"30px\",\n              transform: `translate(\n                        ${nodeHovered ? -66 : 0}px,\n                        ${nodeHovered ? -1 : -4}px\n                      )`,\n              transition: \"transform 0.1s ease-in-out\",\n              zIndex: node.layer + 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 15\n        }, this), nodeHovered && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"node-warning-label\",\n          children: \"Identifier missing!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 5\n  }, this) // top\n  ;\n}, \"r+xxSlqq+pwonHWYNoUw8hNvCEc=\", false, function () {\n  return [useSpring];\n})), \"r+xxSlqq+pwonHWYNoUw8hNvCEc=\", false, function () {\n  return [useSpring];\n});\nvar _c, _c2;\n$RefreshReg$(_c, \"%default%$React.memo\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","useSpring","animated","chroma","WarningIcon","NodeContext","colorPalette","jsxDEV","_jsxDEV","_c2","_s","memo","_c","Node","props","node","isSelected","connecting","colorIndex","canvasRect","handleNodeMove","handleNodeAction","nodeName","setNodeName","name","dragging","setDragging","dragStartPos","setDragStartPos","dragCurrentPos","setDragCurrentPos","dragOffset","setDragOffset","nodeHovered","setNodeHovered","connectorPos","setConnectorPos","x","y","connectorActive","setConnectorActive","mouseDist","setMouseDist","colors","setColors","nodeRef","nodeCpy","current","scaleNode","e","preventDefault","delta","Math","sign","deltaY","addEventListener","passive","removeEventListener","paletteColors","type","brighten","hex","darken","calculateConnector","dx","dy","angle","atan2","radius","size","connectorPosition","cos","sin","handleMouseMove","displacement","clientX","clientY","id","position","mousePos","left","top","detectionRadius","dist","sqrt","document","handleNodeActionLocal","action","handleMouseDown","button","stopPropagation","isEditing","handleMouseUp","abs","cleanupDrag","handleClickLocal","handleNameInputBlur","undefined","handleNameChangeLocal","console","log","target","value","handleInputKeyUp","key","handleNameMouseUp","iconAnimProps","color","config","tension","friction","style","zIndex","layer","children","onSelect","isOpen","nodeSize","fileName","_jsxFileName","lineNumber","columnNumber","className","width","height","transform","onClick","onContextMenu","onMouseDown","onMouseUp","onMouseEnter","onMouseLeave","tabIndex","ref","backgroundColor","opacity","outlineColor","outlineStyle","outlineWidth","outlineOffset","defaultValue","onChange","onBlur","onKeyUp","autoFocus","userSelect","border","pointerEvents","div","fontSize","transition","$RefreshReg$"],"sources":["/home/mdreger/Documents/MatGraphAI/MatGraphAI/frontend/src/components/canvas/node.component.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from \"react\"\nimport { useSpring, animated } from \"react-spring\"\nimport chroma from \"chroma-js\"\n\nimport WarningAmberIcon from \"@mui/icons-material/WarningAmber\"\nimport WarningIcon from \"@mui/icons-material/Warning\"\n\nimport NodeContext from \"./ctxt/node-ctxt.component\"\nimport { INode, Position, Vector2D } from \"./types/canvas.types\"\nimport { colorPalette } from \"./types/colorPalette\"\n\ninterface NodeProps {\n  node: INode\n  isSelected: number\n  connecting: boolean\n  colorIndex: number\n  canvasRect: DOMRect | null\n  handleNodeMove: (nodeID: INode[\"id\"], displacement: Vector2D) => void\n  handleNodeAction: (\n    node: INode,\n    action: string,\n    delta?: number,\n    name?: string\n  ) => void\n}\n\nexport default React.memo(function Node(props: NodeProps) {\n  const {\n    node,\n    isSelected,\n    connecting,\n    colorIndex,\n    canvasRect,\n    handleNodeMove,\n    handleNodeAction,\n  } = props\n  const [nodeName, setNodeName] = useState<string | undefined>(node.name)\n  const [dragging, setDragging] = useState(false)\n  const [dragStartPos, setDragStartPos] = useState<Position | null>(null)\n  const [dragCurrentPos, setDragCurrentPos] = useState<Position | null>(null)\n  const [dragOffset, setDragOffset] = useState<Vector2D | null>(null)\n  const [nodeHovered, setNodeHovered] = useState(false)\n  const [connectorPos, setConnectorPos] = useState<Position>({ x: 0, y: 0 })\n  const [connectorActive, setConnectorActive] = useState(false)\n  const [mouseDist, setMouseDist] = useState(0)\n  const [colors, setColors] = useState<string[]>([])\n  const nodeRef = useRef<HTMLDivElement>(null)\n\n  // scale node by mouse wheel\n  useEffect(() => {\n    const nodeCpy = nodeRef.current\n    if (!nodeCpy) return\n\n    const scaleNode = (e: WheelEvent) => {\n      e.preventDefault()\n      const delta = Math.sign(e.deltaY)\n      handleNodeAction(node, \"scale\", delta)\n    }\n\n    nodeCpy.addEventListener(\"wheel\", scaleNode, { passive: false })\n    return () => {\n      nodeCpy.removeEventListener(\"wheel\", scaleNode)\n    }\n  }, [node, handleNodeAction])\n\n  useEffect(() => {\n    const paletteColors = colorPalette[colorIndex]\n\n    setColors([\n      paletteColors[node.type],\n      chroma(paletteColors[node.type]).brighten().hex(),\n      chroma(paletteColors[node.type]).darken(0.75).hex(),\n    ])\n  }, [node.type, colorIndex])\n\n  // calculate connector stats (position, and active status)\n  // is called when mousePos is inside node bounding box\n  const calculateConnector = useCallback(\n    (dx: number, dy: number) => {\n      const angle = Math.atan2(dy, dx)\n      const radius = isSelected > 0 ? node.size / 2 + 5 : node.size / 2 + 2\n\n      const connectorPosition = {\n        x: node.size / 2 + radius * Math.cos(angle),\n        y: node.size / 2 + radius * Math.sin(angle),\n      }\n      setConnectorPos(connectorPosition)\n\n      if (\n        (isSelected !== 0 && mouseDist > node.size / 2 - 1 && nodeHovered) ||\n        (isSelected === 0 && mouseDist > node.size / 2 - 5 && nodeHovered)\n      ) {\n        setConnectorActive(true)\n      } else {\n        setConnectorActive(false)\n      }\n    },\n    [isSelected, nodeHovered, node.size, mouseDist]\n  )\n\n  // handle node movement and check if mousePos is inside node\n  // bounding box. if it is, setMouseDist and call calculateConnector\n  useEffect(() => {\n    const handleMouseMove = (e: MouseEvent) => {\n      if (!canvasRect) return\n      if (dragging && dragCurrentPos && dragOffset) {\n        const displacement = {\n          x: e.clientX - dragCurrentPos.x - dragOffset.x - canvasRect.x,\n          y: e.clientY - dragCurrentPos.y - dragOffset.y - canvasRect.y,\n        }\n        handleNodeMove(node.id, displacement)\n        setDragCurrentPos({\n          x: node.position.x + displacement.x,\n          y: node.position.y + displacement.y,\n        })\n      } else if (canvasRect && !connecting) {\n        const mousePos = {\n          x: e.clientX - canvasRect.left,\n          y: e.clientY - canvasRect.top,\n        }\n        const detectionRadius = 31\n        if (\n          mousePos.x >= node.position.x - (node.size / 2 + detectionRadius) &&\n          mousePos.x <= node.position.x + (node.size / 2 + detectionRadius) &&\n          mousePos.y >= node.position.y - (node.size / 2 + detectionRadius) &&\n          mousePos.y <= node.position.y + (node.size / 2 + detectionRadius)\n        ) {\n          const dx = mousePos.x - node.position.x\n          const dy = mousePos.y - node.position.y\n          const dist = Math.sqrt(dx * dx + dy * dy)\n          setMouseDist(dist)\n          calculateConnector(dx, dy)\n          return // from here\n        }\n      }\n      setMouseDist(1000)\n      setConnectorActive(false)\n    }\n    // to here\n\n    document.addEventListener(\"mousemove\", handleMouseMove)\n    return () => {\n      document.removeEventListener(\"mousemove\", handleMouseMove)\n    }\n  }, [node, canvasRect, connecting, dragging, dragCurrentPos, dragOffset, handleNodeMove, calculateConnector])\n\n  const handleNodeActionLocal = (action: string) => {\n    handleNodeAction(node, action)\n  }\n\n  // initiate node movement\n  const handleMouseDown = (e: React.MouseEvent) => {\n    if (e.button === 2) return\n    e.stopPropagation()\n    if (connectorActive && !node.isEditing) {\n      handleNodeAction(node, \"connect\")\n    } else {\n      if (!canvasRect || node.isEditing) return\n      setDragging(true)\n      setDragStartPos({ x: node.position.x, y: node.position.y })\n      setDragCurrentPos({ x: node.position.x, y: node.position.y })\n      setDragOffset({\n        x: e.clientX - node.position.x - canvasRect.left,\n        y: e.clientY - node.position.y - canvasRect.top,\n      })\n      handleNodeAction(node, \"initMove\")\n    }\n  }\n\n  // either complete connection between 2 nodes or\n  // open node nav menu (if node hasnt been moved significantly)\n  const handleMouseUp = () => {\n    if (connecting) {\n      // always carry out node click if a node is trying to connect (favour connection)\n      handleNodeAction(node, \"click\")\n    } else if (\n      // carry out node click if node is not trying to connect\n      // only when node has not been moved significantly (prevent click after drag)\n      dragStartPos &&\n      canvasRect &&\n      Math.abs(dragStartPos.x - node.position.x) < 15 &&\n      Math.abs(dragStartPos.y - node.position.y) < 15\n    ) {\n      handleNodeAction(node, \"click\")\n    }\n    cleanupDrag()\n  }\n\n  // prevent event propagation (prevent canvas.tsx onClick)\n  const handleClickLocal = (e: React.MouseEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n  }\n\n  // confirm node name\n  const handleNameInputBlur = () => {\n    handleNodeAction(node, \"rename\", undefined, nodeName)\n  }\n\n  // update local node name\n  const handleNameChangeLocal = (e: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(\"changing\")\n    setNodeName(e.target.value)\n  }\n\n  // confirm node name with \"Enter\"\n  const handleInputKeyUp = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === \"Enter\") {\n      e.preventDefault()\n      handleNodeAction(node, \"rename\", undefined, nodeName)\n    }\n  }\n\n  const handleNameMouseUp = (e: React.MouseEvent) => {\n    if (\n      isSelected === 1 &&\n      dragStartPos &&\n      canvasRect &&\n      Math.abs(dragStartPos.x - node.position.x) < 15 &&\n      Math.abs(dragStartPos.y - node.position.y) < 15\n    ) {\n      e.stopPropagation()\n      handleNodeAction(node, \"setIsEditing\")\n      cleanupDrag()\n    }\n  }\n\n  const cleanupDrag = () => {\n    setDragging(false)\n    setDragStartPos(null)\n    setDragCurrentPos(null)\n    setDragOffset(null)\n  }\n\n  const iconAnimProps = useSpring({\n    color: nodeHovered ? '#E15554' : colors[0],\n    config: {\n      tension: nodeHovered ? 170 : 150,\n      friction: nodeHovered ? 26 : 170\n    }\n  })\n\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        zIndex: isSelected === 1 ? 1000 : node.layer,\n      }}\n    >\n      {isSelected === 1 && (\n        <div // Node context menu\n          style={{\n            position: \"relative\",\n            left: node.position.x,\n            top: node.position.y,\n          }}\n        >\n          <NodeContext\n            onSelect={handleNodeActionLocal}\n            isOpen={isSelected === 1}\n            nodeSize={node.size}\n          />\n        </div>\n      )}\n      <div // clickable node (larger than actual node but not visual)\n        className=\"node-clickable\"\n        style={{\n          width: node.size + 20,\n          height: node.size + 20,\n          top: node.position.y,\n          left: node.position.x,\n          transform: \"translate(-50%, -50%)\",\n        }}\n        onClick={handleClickLocal} // prevent propagation to canvas onClick\\\n        onContextMenu={handleClickLocal}\n        onMouseDown={handleMouseDown} // init connection\n        onMouseUp={handleMouseUp} // handleNodeClick (complete connection || open node nav)\n        onMouseEnter={() => setNodeHovered(true)}\n        onMouseLeave={() => setNodeHovered(false)}\n        tabIndex={0}\n        ref={nodeRef}\n      >\n        <div // visual node\n          className=\"node\"\n          tabIndex={0}\n          style={{\n            width: node.size,\n            height: node.size,\n            backgroundColor: colors[0],\n            opacity: nodeName ? 1 : 0.7,\n            outlineColor: isSelected > 0 || nodeHovered ? colors[1] : colors[2],\n            outlineStyle: \"solid\",\n            outlineWidth: \"4px\",\n            outlineOffset: isSelected > 0 ? \"3px\" : \"0px\",\n          }}\n        >\n          {node.isEditing || // node name input field\n          (isSelected === 1 && !node.name) ? (\n            <input\n              type=\"text\"\n              defaultValue={node.name}\n              onChange={handleNameChangeLocal} // write nodeName state\n              onBlur={handleNameInputBlur} // rename actual node with node.name = nodeName\n              onKeyUp={handleInputKeyUp} // confirm name with enter\n              autoFocus\n              style={{\n                zIndex: node.layer + 1,\n              }}\n            />\n          ) : (\n            <span // node name tag\n              onMouseUp={handleNameMouseUp}\n              style={{\n                userSelect: \"none\",\n                color:\n                  node.type === \"matter\" || node.type === \"measurement\"\n                    ? \"#1a1b1e\"\n                    : \"#ececec\",\n                zIndex: node.layer + 1,\n              }}\n            >\n              {/* {nodeName\n                ? node.name\n                : `id: ${node.id.substring(0, node.size / 8 - 8)}...`} */}\n              {nodeName ? node.name : \"\"}\n            </span>\n          )}\n          {mouseDist < node.size / 2 + 30 &&\n            mouseDist > 30 &&\n            !node.isEditing && ( // draw node connector\n              <div\n                className=\"node-connector\"\n                style={{\n                  border: `1px solid ${colors[1]}`,\n                  backgroundColor: connectorActive ? colors[1] : \"transparent\",\n                  top: connectorPos.y,\n                  left: connectorPos.x,\n                  pointerEvents: \"none\",\n                  zIndex: node.layer + 1,\n                }}\n              />\n            )}\n        </div>{/* visual */}\n        {!nodeName &&\n          !isSelected &&\n          !node.isEditing && ( // warning: !nodeName\n            <div\n              className=\"node-warning\"\n              style={{\n                width: node.size,\n                height: node.size,\n                left: node.size / 2 + 10,\n                top: node.size / 2 + 10,\n                pointerEvents: \"none\",\n              }}\n            >\n              <animated.div style={iconAnimProps}>\n                <WarningIcon\n                  style={{\n                    position: \"relative\",\n                    fontSize: \"30px\",\n                    transform: `translate(\n                        ${nodeHovered ? -66 : 0}px,\n                        ${nodeHovered ? -1 : -4}px\n                      )`,\n                    transition: \"transform 0.1s ease-in-out\",\n                    zIndex: node.layer + 1,\n                  }}\n                />\n              </animated.div>\n              {nodeHovered && (\n                <div className=\"node-warning-label\">Identifier missing!</div>\n              )}\n            </div>\n          )}\n      </div>{/* clickable */}\n    </div> // top\n  )\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}