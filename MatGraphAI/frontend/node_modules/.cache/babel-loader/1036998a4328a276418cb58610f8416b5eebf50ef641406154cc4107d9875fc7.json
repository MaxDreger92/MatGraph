{"ast":null,"code":"var _jsxFileName = \"/home/mdreger/Documents/MatGraphAI/MatGraphAI/frontend/src/components/canvas/ctxt/connection-ctxt.component.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Planet } from \"react-planet\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport SwapHorizIcon from \"@mui/icons-material/SwapHoriz\";\nimport { hoverColors } from \"../types/colorPalette\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ContextButton(props) {\n  _s();\n  const {\n    onSelect,\n    children,\n    action\n  } = props;\n  const [hovered, setHovered] = useState(false);\n  const handleClick = e => {\n    e.stopPropagation();\n    onSelect(action);\n  };\n  const hoverColor = hoverColors[action] || hoverColors.default;\n  const styledChild = React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? /*#__PURE__*/React.cloneElement(child, {\n    style: {\n      color: hovered ? hoverColor : \"#1a1b1e\"\n    }\n  }) : child);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ctxt-button\",\n    onClick: handleClick,\n    onMouseEnter: () => setHovered(true),\n    onMouseLeave: () => setHovered(false),\n    style: {\n      width: 40,\n      height: 40,\n      backgroundColor: \"#666666\"\n    },\n    children: styledChild\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(ContextButton, \"V8YbV+gTZxGliGj1g0fftBlvsq4=\");\n_c = ContextButton;\nexport default function ConnectionContext(props) {\n  const {\n    onSelect,\n    isOpen\n  } = props;\n  console.log(\"rendered\");\n  return /*#__PURE__*/_jsxDEV(Planet, {\n    centerContent: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ctxt-planet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 22\n    }, this),\n    open: isOpen\n    // autoClose\n    ,\n    hideOrbit: true,\n    orbitRadius: 40,\n    rotation: 90,\n    children: [/*#__PURE__*/_jsxDEV(ContextButton, {\n      onSelect: onSelect,\n      children: /*#__PURE__*/_jsxDEV(SwapHorizIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 19\n      }, this),\n      action: \"reverse\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContextButton, {\n      onSelect: onSelect,\n      children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 19\n      }, this),\n      action: \"delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_c2 = ConnectionContext;\nvar _c, _c2;\n$RefreshReg$(_c, \"ContextButton\");\n$RefreshReg$(_c2, \"ConnectionContext\");","map":{"version":3,"names":["React","useState","Planet","CloseIcon","SwapHorizIcon","hoverColors","jsxDEV","_jsxDEV","ContextButton","props","_s","onSelect","children","action","hovered","setHovered","handleClick","e","stopPropagation","hoverColor","default","styledChild","Children","map","child","isValidElement","cloneElement","style","color","className","onClick","onMouseEnter","onMouseLeave","width","height","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","ConnectionContext","isOpen","console","log","centerContent","open","hideOrbit","orbitRadius","rotation","_c2","$RefreshReg$"],"sources":["/home/mdreger/Documents/MatGraphAI/MatGraphAI/frontend/src/components/canvas/ctxt/connection-ctxt.component.tsx"],"sourcesContent":["import React, { useState } from \"react\"\nimport { Planet } from \"react-planet\"\n\nimport CloseIcon from \"@mui/icons-material/Close\"\nimport SwapHorizIcon from \"@mui/icons-material/SwapHoriz\"\n\n\nimport { hoverColors } from \"../types/colorPalette\"\n\ninterface ConnectionContextProps {\n  onSelect: (action: string) => void\n  isOpen: boolean\n}\n\ninterface ContextButtonProps {\n  onSelect: (action: string) => void\n  children: React.ReactNode\n  action: string\n}\n\nfunction ContextButton(props: ContextButtonProps) {\n  const { onSelect, children, action } = props\n  const [hovered, setHovered] = useState(false)\n\n  const handleClick = (e: React.MouseEvent) => {\n    e.stopPropagation()\n    onSelect(action)\n  }\n\n  const hoverColor = hoverColors[action] || hoverColors.default\n\n  const styledChild = React.Children.map(children, (child) =>\n  React.isValidElement(child)\n    ? React.cloneElement(child as React.ReactElement<any>, {\n        style: { color: hovered ? hoverColor : \"#1a1b1e\" },\n      })\n    : child\n  )\n\n  return (\n    <div\n      className=\"ctxt-button\"\n      onClick={handleClick}\n      onMouseEnter={() => setHovered(true)}\n      onMouseLeave={() => setHovered(false)}\n      style={{\n        width: 40,\n        height: 40,\n        backgroundColor: \"#666666\",\n      }}\n    >\n      {styledChild}\n    </div>\n  )\n}\n\nexport default function ConnectionContext(props: ConnectionContextProps) {\n  const { onSelect, isOpen} = props\n\n  console.log(\"rendered\")\n\n  return (\n    <Planet\n      centerContent={<div className=\"ctxt-planet\" />}\n      open={isOpen}\n      // autoClose\n      hideOrbit\n      orbitRadius={40}\n      rotation={90}\n    >\n      <ContextButton\n        onSelect={onSelect}\n        children={<SwapHorizIcon />}\n        action=\"reverse\"\n      />\n      <ContextButton\n        onSelect={onSelect}\n        children={<CloseIcon />}\n        action=\"delete\"\n      />\n    </Planet>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}