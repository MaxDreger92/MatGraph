{"ast":null,"code":"var _jsxFileName = \"/home/mdreger/Documents/MatGraphAI/MatGraphAI/frontend/src/components/canvas/connection.component.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport ConnectionContext from \"./ctxt/connection-ctxt.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Temporary connection from connection start node to\n// mouse cursor or the canvas nav menu onMouseUp.\n// Extinguished on completion of node connection\nexport function TempConnection(props) {\n  _s();\n  const {\n    startPosition,\n    endPosition,\n    canvasRect\n  } = props;\n  const [end, setEnd] = useState({\n    x: startPosition.x,\n    y: startPosition.y\n  });\n  useEffect(() => {\n    if (endPosition) {\n      setEnd(endPosition);\n      return;\n    }\n    const moveHandler = e => {\n      if (!canvasRect) return;\n      const x = e.clientX - canvasRect.left;\n      const y = e.clientY - canvasRect.top;\n      setEnd({\n        x,\n        y\n      });\n    };\n    document.addEventListener(\"mousemove\", moveHandler);\n    return () => {\n      document.removeEventListener(\"mousemove\", moveHandler);\n    };\n  }, [endPosition, canvasRect]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    style: {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n      pointerEvents: \"none\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n      children: /*#__PURE__*/_jsxDEV(\"marker\", {\n        id: \"arrow\",\n        viewBox: \"0 0 10 10\",\n        refX: \"9\",\n        refY: \"5\",\n        fill: \"#555\",\n        markerWidth: \"8\",\n        markerHeight: \"8\",\n        orient: \"auto-start-reverse\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M 0 0 L 10 5 L 0 10 z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      // temporary connection path\n      d: `M ${startPosition.x},${startPosition.y} L ${end.x},${end.y}`,\n      stroke: \"#555\",\n      strokeWidth: \"2\",\n      fill: \"none\",\n      markerEnd: \"url(#arrow)\",\n      pointerEvents: \"none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(TempConnection, \"XSgE4s2O9dU/lU0D4cVPnz3Yh5o=\");\n_c = TempConnection;\nexport default function Connection(props) {\n  const {\n    connection,\n    isSelected,\n    handleConnectionAction\n  } = props;\n  const handleClickLocal = e => {\n    e.stopPropagation();\n    handleConnectionAction(connection.id, \"click\");\n  };\n  const handleConnectionActionLocal = action => {\n    handleConnectionAction(connection.id, action);\n  };\n  const start = connection.start;\n  const end = connection.end;\n  const dx = end.position.x - start.position.x;\n  const dy = end.position.y - start.position.y;\n  const len = Math.sqrt(dx * dx + dy * dy);\n  const normX = dx / len;\n  const normY = dy / len;\n  const startX = start.position.x + normX * (start.size / 2 + 4);\n  const startY = start.position.y + normY * (start.size / 2 + 4);\n  const endX = end.position.x - normX * (end.size / 2 + 6);\n  const endY = end.position.y - normY * (end.size / 2 + 6);\n\n  // calc connectionPos for placement of connection ctxt menu\n  // should be exactly half way between both node borders\n  const connectionPos = {\n    x: (startX + endX + normX * 2) / 2,\n    y: (startY + endY + normY * 2) / 2\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      style: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        pointerEvents: \"none\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n        children: [/*#__PURE__*/_jsxDEV(\"marker\", {\n          id: \"arrowSelect\",\n          viewBox: \"0 0 10 10\",\n          refX: \"7\",\n          refY: \"5\",\n          fill: \"#6f6f6f\",\n          markerWidth: \"4\",\n          markerHeight: \"8\",\n          orient: \"auto-start-reverse\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M 0 0 L 10 5 L 0 10 z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"marker\", {\n          id: \"arrow\",\n          viewBox: \"0 0 10 10\",\n          refX: \"9\",\n          refY: \"5\",\n          fill: \"#555\",\n          markerWidth: \"8\",\n          markerHeight: \"8\",\n          orient: \"auto-start-reverse\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M 0 0 L 10 5 L 0 10 z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), isSelected && /*#__PURE__*/_jsxDEV(\"path\", {\n        // connection outline on selection\n        d: `M ${startX},${startY} L ${endX},${endY}`,\n        stroke: \"#6f6f6f\",\n        strokeWidth: \"6\",\n        fill: \"none\",\n        markerEnd: \"url(#arrowSelect)\",\n        pointerEvents: \"none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n        // actual connection (always visible)\n        d: `M ${startX},${startY} L ${endX},${endY}`,\n        stroke: \"#555\",\n        strokeWidth: \"2\",\n        fill: \"none\",\n        markerEnd: \"url(#arrow)\",\n        pointerEvents: \"none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n        // connection clickable area (for better ux)\n        d: `M ${startX},${startY} L ${endX},${endY}`,\n        fill: \"none\",\n        strokeWidth: \"20\",\n        stroke: \"transparent\",\n        pointerEvents: \"auto\",\n        onClick: handleClickLocal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), isSelected &&\n    /*#__PURE__*/\n    // Connection context menu\n    _jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        left: connectionPos.x,\n        top: connectionPos.y\n      },\n      children: /*#__PURE__*/_jsxDEV(ConnectionContext, {\n        onSelect: handleConnectionActionLocal,\n        isOpen: isSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Connection;\nvar _c, _c2;\n$RefreshReg$(_c, \"TempConnection\");\n$RefreshReg$(_c2, \"Connection\");","map":{"version":3,"names":["useState","useEffect","ConnectionContext","jsxDEV","_jsxDEV","TempConnection","props","_s","startPosition","endPosition","canvasRect","end","setEnd","x","y","moveHandler","e","clientX","left","clientY","top","document","addEventListener","removeEventListener","style","position","width","height","pointerEvents","children","id","viewBox","refX","refY","fill","markerWidth","markerHeight","orient","d","fileName","_jsxFileName","lineNumber","columnNumber","stroke","strokeWidth","markerEnd","_c","Connection","connection","isSelected","handleConnectionAction","handleClickLocal","stopPropagation","handleConnectionActionLocal","action","start","dx","dy","len","Math","sqrt","normX","normY","startX","size","startY","endX","endY","connectionPos","onClick","onSelect","isOpen","_c2","$RefreshReg$"],"sources":["/home/mdreger/Documents/MatGraphAI/MatGraphAI/frontend/src/components/canvas/connection.component.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\"\n\nimport { IConnection } from \"./types/canvas.types\"\nimport ConnectionContext from \"./ctxt/connection-ctxt.component\"\n\ninterface ConnectionProps {\n  connection: IConnection\n  isSelected: boolean\n  handleConnectionAction: (connectionID: IConnection[\"id\"], action: string) => void\n}\n\ninterface TempConnectionProps {\n  startPosition: { x: number; y: number }\n  endPosition: { x: number; y: number } | null\n  canvasRect: DOMRect | null\n}\n\n// Temporary connection from connection start node to\n// mouse cursor or the canvas nav menu onMouseUp.\n// Extinguished on completion of node connection\nexport function TempConnection(props: TempConnectionProps) {\n  const { startPosition, endPosition, canvasRect } = props\n  const [end, setEnd] = useState({ x: startPosition.x, y: startPosition.y })\n\n  useEffect(() => {\n    if (endPosition) {\n      setEnd(endPosition)\n      return\n    }\n    const moveHandler = (e: MouseEvent) => {\n      if (!canvasRect) return\n      const x = e.clientX - canvasRect.left\n      const y = e.clientY - canvasRect.top\n      setEnd({ x, y })\n    }\n\n    document.addEventListener(\"mousemove\", moveHandler)\n    return () => {\n      document.removeEventListener(\"mousemove\", moveHandler)\n    }\n  }, [endPosition, canvasRect])\n\n  return (\n    <svg\n      style={{\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        pointerEvents: \"none\",\n      }}\n    >\n      <defs>\n        <marker\n          id=\"arrow\"\n          viewBox=\"0 0 10 10\"\n          refX=\"9\"\n          refY=\"5\"\n          fill=\"#555\"\n          markerWidth=\"8\"\n          markerHeight=\"8\"\n          orient=\"auto-start-reverse\"\n        >\n          <path d=\"M 0 0 L 10 5 L 0 10 z\" />\n        </marker>\n      </defs>\n      <path // temporary connection path\n        d={`M ${startPosition.x},${startPosition.y} L ${end.x},${end.y}`}\n        stroke=\"#555\"\n        strokeWidth=\"2\"\n        fill=\"none\"\n        markerEnd=\"url(#arrow)\"\n        pointerEvents=\"none\"\n      />\n    </svg>\n  )\n}\n\nexport default function Connection(props: ConnectionProps) {\n  const { connection, isSelected, handleConnectionAction } = props\n\n  const handleClickLocal = (e: React.MouseEvent) => {\n    e.stopPropagation()\n    handleConnectionAction(connection.id, \"click\")\n  }\n\n  const handleConnectionActionLocal = (action: string) => {\n    handleConnectionAction(connection.id, action)\n  }\n\n  const start = connection.start\n  const end = connection.end\n\n  const dx = end.position.x - start.position.x\n  const dy = end.position.y - start.position.y\n  const len = Math.sqrt(dx * dx + dy * dy)\n  const normX = dx / len\n  const normY = dy / len\n\n  const startX = start.position.x + normX * (start.size / 2 + 4)\n  const startY = start.position.y + normY * (start.size / 2 + 4)\n  const endX = end.position.x - normX * (end.size / 2 + 6)\n  const endY = end.position.y - normY * (end.size / 2 + 6)\n\n  // calc connectionPos for placement of connection ctxt menu\n  // should be exactly half way between both node borders\n  const connectionPos = {\n    x: (startX + endX + normX * 2) / 2,\n    y: (startY + endY + normY * 2) / 2,\n  }\n\n  return (\n    <div>\n      <svg\n        style={{\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          width: \"100%\",\n          height: \"100%\",\n          pointerEvents: \"none\",\n        }}\n      >\n        <defs>\n          {/* Bigger arrowhead for selection path\n          (outline to actual connection path) */}\n          <marker\n            id=\"arrowSelect\"\n            viewBox=\"0 0 10 10\"\n            refX=\"7\"\n            refY=\"5\"\n            fill=\"#6f6f6f\"\n            markerWidth=\"4\"\n            markerHeight=\"8\"\n            orient=\"auto-start-reverse\"\n          >\n            <path d=\"M 0 0 L 10 5 L 0 10 z\" />\n          </marker>\n          {/* Arrowhead for actual connection path */}\n          <marker\n            id=\"arrow\"\n            viewBox=\"0 0 10 10\"\n            refX=\"9\"\n            refY=\"5\"\n            fill=\"#555\"\n            markerWidth=\"8\"\n            markerHeight=\"8\"\n            orient=\"auto-start-reverse\"\n          >\n            <path d=\"M 0 0 L 10 5 L 0 10 z\" />\n          </marker>\n        </defs>\n        {isSelected && (\n            <path // connection outline on selection\n              d={`M ${startX},${startY} L ${endX},${endY}`}\n              stroke=\"#6f6f6f\"\n              strokeWidth=\"6\"\n              fill=\"none\"\n              markerEnd=\"url(#arrowSelect)\"\n              pointerEvents=\"none\"\n            />\n        )}\n        <path // actual connection (always visible)\n          d={`M ${startX},${startY} L ${endX},${endY}`}\n          stroke=\"#555\"\n          strokeWidth=\"2\"\n          fill=\"none\"\n          markerEnd=\"url(#arrow)\"\n          pointerEvents=\"none\"\n        />\n        <path // connection clickable area (for better ux)\n          d={`M ${startX},${startY} L ${endX},${endY}`}\n          fill=\"none\"\n          strokeWidth=\"20\"\n          stroke=\"transparent\"\n          pointerEvents=\"auto\"\n          onClick={handleClickLocal}\n        />\n      </svg>\n      {isSelected && ( // Connection context menu\n        <div style={{position: \"relative\", left: connectionPos.x, top: connectionPos.y}}>\n          <ConnectionContext\n            onSelect={handleConnectionActionLocal}\n            isOpen={isSelected}\n          />\n        </div>\n      )}\n    </div>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}